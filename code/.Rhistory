plot(scored, salary, col = position_fac, xlab = "Points", ylab= "Salary")
github <- 'https://github.com/ucb-stat133/stat133-fall-2018/'
repo <- 'raw/master/data/tents.RData'
download.file(url=paste0(github, repo), destfile = "tents.RData")
load("tents.RData")
ls()
?str
knitr::opts_chunk$set(echo = TRUE)
str(tent)
str(tent)
str(tent[1:5])
str(tent[1:3])
summary(price)
summary(price)
mean(price)
min(price)
max(price)
median(price)
summary(price)
mean(price)
min(price)
max(price)
median(price)
quartile(price)
summary(price)
mean(price)
min(price)
max(price)
median(price)
quantile(price)
type(bestuse)
class(bestuse)
class(season)
is.factor(bestuse)
is.factor(season)
is.factor(capacity)
is.factor(get(variable[1]))
is.factor(get(season[1]))
factor(season)
season_fact <- factor(season)
table(season_fact)
?table
ttt = table(season_fact)
ttt[3-season]
ttt(3-season)
ttt.get(3-season)
season_fact(3-season)
season_fact[3-season]
knitr::opts_chunk$set(echo = TRUE)
#Positions of Warriors
position_fac[which(team=="GSW")]
season_fact[which(season_fact = "3-season")]
season_fact[which(season_fact == "3-season")]
?count
table[1]
tab_season[1]
season_fact <- factor(season)
tab_season <- table(season_fact)
#Frequency of 3-season
tab_season[1]
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
8/(4+78+8)
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
THe distribution is
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
#Te distribution is centred heavily on '3-season', which takes up ~87% of the total.
#Plot
barplot(tab_season)
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
#Te distribution is centred heavily on '3-season', which takes up ~87% of the total.
#Plot
freq_tab_season <- table(season_fact/length(season))
barplot(freq_tab_season/)
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
#Te distribution is centred heavily on '3-season', which takes up ~87% of the total.
#Plot
freq_tab_season <- table(season_fact/length(season))
barplot(freq_tab_season)
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
#Te distribution is centred heavily on '3-season', which takes up ~87% of the total.
#Plot
freq_tab_season <- table(season_fact)/length(season)
barplot(freq_tab_season)
?plot.new
?plot.window
?axis
?title
?points
?pch
?pch
knitr::opts_chunk$set(echo = TRUE)
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price")
points(height, price, pch = ".", col = "red")
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price")
points(height, price, pch = ".", col = "red", cex = 3)
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price")
points(height, price, pch = ".", col = "red", cex = 3, xlab = "Height", ylab = "Price")
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price", xlab = "Height", ylab = "Price")
points(height, price, pch = ".", col = "red", cex = 3)
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price", xlab = "Height", ylab = "Price")
points(height, price, pch = ".", col = "red", cex = 3)
ls()
n
sum(height)
height-10
n <- length(height)
mean_x <- sum(height)/n
mean_y <- sum(price)/n
var_x <- sum((height-mean_x)^2)/(n-1)
var_y <- sum((price-mean_y)^2)/(n-1)
sd_x <- sqrt(var_x)
sd_y <- sqrt(var_y)
cov_xy <- sum((height-mean_x)*(price-mean_y))/(n-1)
corr_xy <- cov_xy/(sd_x*sd_y)
cov(height, price)
cov_xy
cor(height, price)
corr_xy
n <- length(height)
n
mean_x <- sum(height)/n
mean_x
mean_y <- sum(price)/n
mean_y
var_x <- sum((height-mean_x)^2)/(n-1)
var_x
var_y <- sum((price-mean_y)^2)/(n-1)
var_y
sd_x <- sqrt(var_x)
sd_x
sd_y <- sqrt(var_y)
sd_y
cov_xy <- sum((height-mean_x)*(price-mean_y))/(n-1)
cov_xy
corr_xy <- cov_xy/(sd_x*sd_y)
corr_xy
weight_lbs <- 0.00220462*weight_lbs
weight_lbs <- 0.00220462*weight
height_in <- 0.393701*height
#######
#How many tents have a price less than or equal to $300
length(which(price<=300))
quantile(height)
?percentile
quantile(height, probs = c(0.9))
weight_lbs <- 0.00220462*weight
height_in <- 0.393701*height
#######
#How many tents have a price less than or equal to $300
length(which(price<=300))
#How many tents have a price between $300 and $400
length(which(300<=price<=400))
weight_lbs <- 0.00220462*weight
height_in <- 0.393701*height
#######
#How many tents have a price less than or equal to $300
length(which(price<=300))
#How many tents have a price between $300 and $400
length(which(300<=price)&which(price<=400))
#Name of tent with maximum price
tent[which.max(price)]
#How many tents have a price>$400 and weight <1500 grams
length(intersect(which(price>400), which(weight<1500)))
#90th percentile for height
height_p90 = quantile(height, probs = c(0.9))
height_p90
#90th percenile for weight
weight_p90 = quantile(weight, probs = c(0.9))
weight_p90
#tents with height>height_p90 and weight>weight_p90
tent[intersect(which(height > height_p90), which(weight > weight_p90))]
?cut
?step
?cut
weight_cut <- cut(weight, breaks = seq(0, 9000, 1000), labels = ("1kg", "2kg", "3kg", "4kg", "5kg", "6kg", "7kg", "8kg", "9kg"))
weight_cut <- cut(weight, breaks = seq(0, 9000, 1000), labels = c("1kg", "2kg", "3kg", "4kg", "5kg", "6kg", "7kg", "8kg", "9kg"))
table(weight_cut)
?factor
season_fac <- factor(season, ordered = is.ordered(season))
season_fac
is.ordered(season)
season_fac <- factor(as.ordered(season))
season_fac
?as.ordered
season_fac <- factor(ordered(season))
season_fac
?ordered
season_fac <- factor(ordered(season), levels = c("3-season", "3-4-season", "4-season"))
season_fac
is.ordered(season)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
str(tent)
github <- 'https://github.com/ucb-stat133/stat133-fall-2018/'
repo <- 'raw/master/data/tents.RData'
download.file(
url = paste0(github, repo),
destfile = "tents.RData")
load("tents.RData")
knitr::opts_chunk$set(echo = TRUE)
str(tent)
str(tent[1:5])
str(tent[1:3])
summary(price)
mean(price)
min(price)
max(price)
median(price)
quantile(price)
season_fact <- factor(season)
tab_season <- table(season_fact)
tab_season
#Frequency of 3-season
tab_season[2]/length(season)
#Frequency of 4-season
tab_season[3]/length(season)
#Frequency of 3-4-season
tab_season[1]/length(season)
#Describe the overall distribution
#Te distribution is centred heavily on '3-season', which takes up ~87% of the total.
#Plot
freq_tab_season <- table(season_fact)/length(season)
barplot(freq_tab_season)
plot.new()
plot.window(c(0, max(height)), c(0, max(price)))
axis(1, tick = TRUE)
axis(2, tick = TRUE)
title(main = "Scatterplot of Height and Price", xlab = "Height", ylab = "Price")
points(height, price, pch = ".", col = "red", cex = 3)
n <- length(height)
n
mean_x <- sum(height)/n
mean_x
mean_y <- sum(price)/n
mean_y
var_x <- sum((height-mean_x)^2)/(n-1)
var_x
var_y <- sum((price-mean_y)^2)/(n-1)
var_y
sd_x <- sqrt(var_x)
sd_x
sd_y <- sqrt(var_y)
sd_y
cov_xy <- sum((height-mean_x)*(price-mean_y))/(n-1)
cov_xy
corr_xy <- cov_xy/(sd_x*sd_y)
corr_xy
weight_lbs <- 0.00220462*weight
height_in <- 0.393701*height
#######
#How many tents have a price less than or equal to $300
length(which(price<=300))
#How many tents have a price between $300 and $400
length(which(300<=price)&which(price<=400))
#Name of tent with maximum price
tent[which.max(price)]
#How many tents have a price>$400 and weight <1500 grams
length(intersect(which(price>400), which(weight<1500)))
#90th percentile for height
height_p90 = quantile(height, probs = c(0.9))
height_p90
#90th percenile for weight
weight_p90 = quantile(weight, probs = c(0.9))
weight_p90
#tents with height>height_p90 and weight>weight_p90
tent[intersect(which(height > height_p90), which(weight > weight_p90))]
weight_cut <- cut(weight, breaks = seq(0, 9000, 1000), labels = c("1kg", "2kg", "3kg", "4kg", "5kg", "6kg", "7kg", "8kg", "9kg"))
table(weight_cut)
season_fac <- factor(ordered(season), levels = c("3-season", "3-4-season", "4-season"))
season_fac
ls(rm = ls())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
nba2018 <- read_csv("../Data/nba2018.csv")
library(dplyr)
library(ggplot2)
library(readr)
nba2018 <- read_csv("../Data/nba2018.csv")
#inputs: nba2018.csv
#outpus: efficiency-summary.txt, teams-summary.txt
libarary(dplyr)
nba2018$experience[nba2018$experience == "R"] <- 0
nba2018$experience <- as.integer(nba2018$experience)
nba2018$salary <- (nba2018$salary)/1000000
nba2018$position <- factor(nba2018$position)
levels(nba2018$position)[nba2018$position == "C"] <- 'center'
levels(nba2018$position)[nba2018$position == "PF"] <- 'power_fwd'
levels(nba2018$position)[nba2018$position == "PG"] <- 'point_guard'
levels(nba2018$position)[nba2018$position == "SF"] <- 'small_fwd'
levels(nba2018$position)[nba2018$position == "SG"] <- 'shoot_guard'
nba2018 <- mutate(nba2018, missed_fg = nba2018$field_goals_atts - nba2018$field_goals, missed_ft = nba2018$points1_atts - nba2018$points1, rebounds = nba2018$off_rebounds + nba2018$def_rebounds)
nba2018 <- mutate(nba2018, efficiency = (nba2018$points + nba2018$rebounds + nba2018$assists + nba2018$steals + nba2018$blocks
- nba2018$missed_fg - nba2018$missed_ft - nba2018$turnovers) / nba2018$games_played)
nba2018 <- mutate(nba2018, efficiency = (nba2018$points + nba2018$rebounds + nba2018$assists + nba2018$steals + nba2018$blocks
- nba2018$missed_fg - nba2018$missed_ft - nba2018$turnovers) / nba2018$games)
?sink
getwd()
setwd("../workout1")
setwd("../workout1/code")
summary(nba2018$efficiency)
sink("../output/efficiency-summary.txt")
summary(nba2018$efficiency)
sink("../output/efficiency-summary.txt")
sink("../output/efficiency-summary.txt")
summary(nba2018$efficiency)
sink()
#Creating nba2018-teams.csv
teams <- data.frame()
teams
nba2018 %>% group_by(nba2018$team) %>% sum(nba2018$experience) %>% mutate(teams,)
teams <- mutate(nba2018, nba2018 %>% group_by(nba2018$team) %>% sum(nba2018$experience))
nba2018 %>% group_by(team) %>% summary(points)
nba2018 %>% group_by(team) %>% sum(points)
sum(group_by(nba2018, team))
(group_by(nba2018, team))
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)))
summarise(group_by(nba2018, team), experience = sum(experience))
experience
summarise(group_by(nba2018, team), total = sum(experience))
sink("../output/efficiency-summary.txt")
summary(nba2018$efficiency)
sink()
nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))
sink("../output/efficiency-summary.txt")
summary(nba2018$efficiency)
sink(NULL)
nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)),
nba2018 %>% group_by(team) %>% summarise(salary = sum(salary)),
nba2018 %>% group_by(team) %>% summarise(points3 = sum(points3)),
nba2018 %>% group_by(team) %>% summarise(points2 = sum(points2)),
nba2018 %>% group_by(team) %>% summarise(points1 = sum(points1)),
nba2018 %>% group_by(team) %>% summarise(points = sum(points)),
nba2018 %>% group_by(team) %>% summarise(off_rebounds = sum(off_rebounds)),
nba2018 %>% group_by(team) %>% summarise(def_rebounds = sum(def_rebounds)),
nba2018 %>% group_by(team) %>% summarise(assists = sum(assists)),
nba2018 %>% group_by(team) %>% summarise(steals = sum(steals)),
nba2018 %>% group_by(team) %>% summarise(blocks = sum(blocks)),
nba2018 %>% group_by(team) %>% summarise(turnovers = sum(turnovers)),
nba2018 %>% group_by(team) %>% summarise(fouls = sum(fouls)),
nba2018 %>% group_by(team) %>% summarise(efficiency = sum(efficiency)))
teams <- mutate(nba2018,experience = nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)),
nba2018 %>% group_by(team) %>% summarise(salary = sum(salary)),
nba2018 %>% group_by(team) %>% summarise(points3 = sum(points3)),
nba2018 %>% group_by(team) %>% summarise(points2 = sum(points2)),
nba2018 %>% group_by(team) %>% summarise(points1 = sum(points1)),
nba2018 %>% group_by(team) %>% summarise(points = sum(points)),
nba2018 %>% group_by(team) %>% summarise(off_rebounds = sum(off_rebounds)),
nba2018 %>% group_by(team) %>% summarise(def_rebounds = sum(def_rebounds)),
nba2018 %>% group_by(team) %>% summarise(assists = sum(assists)),
nba2018 %>% group_by(team) %>% summarise(steals = sum(steals)),
nba2018 %>% group_by(team) %>% summarise(blocks = sum(blocks)),
nba2018 %>% group_by(team) %>% summarise(turnovers = sum(turnovers)),
nba2018 %>% group_by(team) %>% summarise(fouls = sum(fouls)),
nba2018 %>% group_by(team) %>% summarise(efficiency = sum(efficiency)))
teams <- mutate(nba2018,experience = nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)))#
teams <- mutate(nba2018,experience = nba2018 %>% group_by(team) %>% summarise(experience = sum(nba2018$experience)))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(nba2018$experience)))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(nba2018$experience)))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% sum(experience)))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% sum(experience))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% sum(experience))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% sum(nba2018$experience))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% sum(nba2018$experience))#
nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))
nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)))#
teams <- mutate(nba2018, nba2018 %>% group_by(team) %>% summarise(experience = sum(experience)))#
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience))#
typeof(team)
typeof(teams)
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience), salary = sum(salary),
points3 = sum(points3),points2 = sum(points2),
points1 = sum(points1),points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists), steals = sum(steals)
, blocks = sum(blocks), turnovers = sum(turnovers),
fouls = sum(fouls), efficiency = sum(efficiency))
teams
teams <- data.frame(teams)
View(teams)
teams
sink("../output/efficiency-summary.txt")
summary(nba2018$efficiency)
sink(NULL)
sink("../output/teams-summary.txt")
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience), salary = sum(salary),
points3 = sum(points3),points2 = sum(points2),
points1 = sum(points1),points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists), steals = sum(steals)
, blocks = sum(blocks), turnovers = sum(turnovers),
fouls = sum(fouls), efficiency = sum(efficiency))
sink()
sink("../output/teams-summary.txt")
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience), salary = sum(salary),
points3 = sum(points3),points2 = sum(points2),
points1 = sum(points1),points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists), steals = sum(steals)
, blocks = sum(blocks), turnovers = sum(turnovers),
fouls = sum(fouls), efficiency = sum(efficiency))
teams
sink()
teams <- as.data.frame(teams)
sink("../output/teams-summary.txt")
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience), salary = sum(salary),
points3 = sum(points3),points2 = sum(points2),
points1 = sum(points1),points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists), steals = sum(steals)
, blocks = sum(blocks), turnovers = sum(turnovers),
fouls = sum(fouls), efficiency = sum(efficiency))
teams <- as.data.frame(teams)
teams
sink()
?write.csv
sink("../data/teams-summary.txt")
teams <-  nba2018 %>% group_by(team) %>% summarise(experience = sum(experience), salary = sum(salary),
points3 = sum(points3),points2 = sum(points2),
points1 = sum(points1),points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists), steals = sum(steals)
, blocks = sum(blocks), turnovers = sum(turnovers),
fouls = sum(fouls), efficiency = sum(efficiency))
teams <- as.data.frame(teams)
teams
sink()
write.csv(teams, file = "../data/nba2018-teams.csv")
